{"version":3,"sources":["webpack:///./packages/mdc-menu/mdc-menu.scss","webpack:///./packages/material-components-web/node_modules/@material/elevation/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/theme/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/typography/_mixins.scss"],"names":[],"mappings":";;;;;AA2BA,UCeE,8GCgBI,sBAiBE,mDF5CN,aACA,kBACA,sBACA,gBACA,6BACA,8BACA,SACA,UACA,8CACA,4DACA,kBACA,UACA,mBACA,kBACA,gBACA,+BACA,SAAU,CApBZ,gBAuBI,YAAa,CACd,0BAGC,qBACA,kDACA,qRAGA,UACA,iBAAkB,CACnB,gBAGC,qBACA,8CACA,SAAU,CACX,4BAGC,qBACA,gCACA,UACA,iBAAkB,CACnB,iBAGC,sBACA,8CACA,kBACA,gBACA,qBAAsB,CALvB,gCASG,cAAe,CAChB,sCAIC,iBAAkB,CACnB,2CAID,mDAAsB,CACvB,iCAGC,6CAAmB,CACpB,sBAIC,6DAA2B,CA7E/B,8CAkFI,aAAc,CAlFlB,yBGKI,6NHmFA,kBACA,aACA,cACA,qBACA,oFAAiB,CA5FrB,kCE+BM,uBAiBE,qEAA4D,CFhDpE,+CE+BM,uBAiBE,qEFsDJ,eACA,mBAAoB,CAvGxB,6DA2GM,SAAU,CACX,iBAOH,kBACA,gBAAiB,CAClB","file":"mdc.menu.min.css","sourcesContent":["//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/elevation/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/theme/variables\";\n@import \"@material/typography/mixins\";\n\n$mdc-menu-fade-in-duration: .03s;\n$mdc-menu-fade-out-duration: .075s;\n$mdc-menu-scale-duration: .12s;\n\n// postcss-bem-linter: define menu\n.mdc-menu {\n  @include mdc-elevation(2);\n  @include mdc-theme-prop(background-color, background);\n\n  display: none;\n  position: absolute;\n  box-sizing: border-box;\n  min-width: 170px;\n  max-width: calc(100vw - 32px);\n  max-height: calc(100vh - 32px);\n  margin: 0;\n  padding: 0;\n  transform: scale(1);\n  transform-origin: top left;\n  border-radius: 2px;\n  opacity: 0;\n  white-space: nowrap;\n  overflow-x: hidden;\n  overflow-y: auto;\n  will-change: transform, opacity;\n  z-index: 4;\n\n  &:focus {\n    outline: none;\n  }\n\n  &--animating-open {\n    display: inline-block;\n    transform: scale(.8);\n    transition:\n      opacity $mdc-menu-fade-in-duration linear,\n      transform $mdc-menu-scale-duration $mdc-animation-deceleration-curve-timing-function;\n    opacity: 0;\n    overflow-y: hidden;\n  }\n\n  &--open {\n    display: inline-block;\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  &--animating-closed {\n    display: inline-block;\n    transition: opacity $mdc-menu-fade-out-duration linear;\n    opacity: 0;\n    overflow-y: hidden;\n  }\n\n  &__items {\n    box-sizing: border-box;\n    transform: scale(1);\n    overflow-x: hidden;\n    overflow-y: auto;\n    will-change: transform;\n\n    // stylelint-disable plugin/selector-bem-pattern\n    > .mdc-list-item {\n      cursor: pointer;\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n\n    .mdc-menu--animating & {\n      overflow-y: hidden;\n    }\n  }\n\n  &--animating-open > .mdc-menu__items {\n    transform: scale(1.25);\n  }\n\n  &--open > .mdc-menu__items {\n    transform: scale(1);\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  [dir=\"rtl\"] & {\n    transform-origin: top right;\n  }\n\n  .mdc-list-group,\n  .mdc-list {\n    padding: 8px 0;\n  }\n\n  .mdc-list-item {\n    @include mdc-typography(subtitle1);\n\n    position: relative;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    user-select: none;\n  }\n\n  .mdc-list-item__graphic {\n    @include mdc-theme-prop(color, text-secondary-on-background);\n  }\n\n  .mdc-list-item[aria-disabled=\"true\"] {\n    @include mdc-theme-prop(color, text-disabled-on-background);\n\n    cursor: default;\n    pointer-events: none;\n\n    // TODO(#1495): Disabled menu items shouldn't be focusable, so this style shouldn't be necessary.\n    &:focus::before {\n      opacity: 0;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-menu-anchor {\n  position: relative;\n  overflow: visible;\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n// postcss-bem-linter: end\n\n\n\n// WEBPACK FOOTER //\n// ./packages/mdc-menu/mdc-menu.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/theme/variables\";\n@import \"./variables\";\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin mdc-elevation($z-value, $color: $mdc-elevation-baseline-color, $opacity-boost: 0) {\n  @if type-of($z-value) != number or not unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  $color: mdc-theme-prop-value($color);\n\n  $umbra-z-value: map-get($mdc-elevation-umbra-map, $z-value);\n  $penumbra-z-value: map-get($mdc-elevation-penumbra-map, $z-value);\n  $ambient-z-value: map-get($mdc-elevation-ambient-map, $z-value);\n\n  $umbra-color: rgba($color, $mdc-elevation-umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $mdc-elevation-penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $mdc-elevation-ambient-opacity + $opacity-boost);\n\n  box-shadow:\n    #{\"#{$umbra-z-value} #{$umbra-color}\"},\n    #{\"#{$penumbra-z-value} #{$penumbra-color}\"},\n    #{$ambient-z-value} $ambient-color;\n}\n\n// Returns a string that can be used as the value for a `transition` property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// ```scss\n// .foo {\n//   transition: mdc-elevation-transition-value(), opacity 100ms ease;\n//   will-change: $mdc-elevation-property, opacity;\n// }\n// ```\n@function mdc-elevation-transition-value(\n  $duration: $mdc-elevation-transition-duration,\n  $easing: $mdc-elevation-transition-timing-function) {\n  @return #{$mdc-elevation-property} #{$duration} #{$easing};\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/elevation/_mixins.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n// Applies the correct theme color style to the specified property.\n// $property is typically color or background-color, but can be any CSS property that accepts color values.\n// $style should be one of the map keys in $mdc-theme-property-values (_variables.scss), or a color value.\n// $edgeOptOut controls whether to feature-detect around Edge to avoid emitting CSS variables for it,\n// intended for use in cases where interactions with pseudo-element styles cause problems due to Edge bugs.\n@mixin mdc-theme-prop($property, $style, $important: false, $edgeOptOut: false) {\n  @if mdc-theme-is-valid-theme-prop-value_($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    @if not map-has-key($mdc-theme-property-values, $style) {\n      @error \"Invalid style: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n    }\n\n    $value: map-get($mdc-theme-property-values, $style);\n\n    @if $important {\n      #{$property}: $value !important;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n      }\n    } @else {\n      #{$property}: $value;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value);\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/theme/_mixins.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-typography-base {\n  @each $key, $value in $mdc-typography-base {\n    #{$key}: $value;\n  }\n}\n\n@mixin mdc-typography($style) {\n  $style-props: map-get($mdc-typography-styles, $style);\n\n  @if not map-has-key($mdc-typography-styles, $style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{map-keys($mdc-typography-styles)}\";\n  }\n\n  @each $key, $value in $style-props {\n    #{$key}: $value;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin mdc-typography-overflow-ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n@mixin mdc-typography-baseline-top($distance) {\n  display: flex;\n  align-items: baseline;\n  margin-top: 0;\n  line-height: normal;\n\n  &::before {\n    @include mdc-typography-baseline-strut_($distance);\n  }\n}\n\n@mixin mdc-typography-baseline-bottom($distance) {\n  margin-bottom: -1 * $distance;\n\n  &::after {\n    @include mdc-typography-baseline-strut_($distance);\n\n    align-items: flex-start;\n  }\n}\n\n@mixin mdc-typography-baseline-strut_($distance) {\n  display: inline-flex;\n  width: 0;\n  height: $distance;\n  content: \"\";\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/typography/_mixins.scss"],"sourceRoot":""}