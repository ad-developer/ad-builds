{"version":3,"sources":["webpack:///./packages/mdc-theme/mdc-theme.scss","webpack:///./packages/mdc-theme/_mixins.scss","webpack:///./packages/mdc-theme/_variables.scss"],"names":[],"mappings":";;;;;AAkBA;EAEI,6BAAkC;EAAlC,+BAAkC;EAAlC,6BAAkC;EAAlC,0BAAkC;EAAlC,6BAAkC;EAAlC,+BAAkC;EAAlC,6BAAkC;EAAlC,4DAAkC;EAAlC,8DAAkC;EAAlC,yDAAkC;EAAlC,6DAAkC;EAAlC,yDAAkC;EAAlC,uDAAkC;EAAlC,yDAAkC;EAAlC,oDAAkC;EAAlC,wDAAkC;EAAlC,oDAAkC;EAAlC,wCAAkC;EAAlC,6DAAkC;EAAlC,wDAAkC;EAAlC,4DAAkC;EAAlC,wDAAkC,EAErC;;AAIG;ECYE,0BAA+B;EAgB7B,gBAAgB;EAChB,oDAAuE,ED3B1E;;AAFD;ECYE,0BAA+B;EAgB7B,gBAAgB;EAChB,sDAAuE,ED3B1E;;AAED;EC4BE,uBC1BqB;ED0CnB,gBAAgB;EAChB,oDAA4D,ED3C/D;;AAFD;EC4BE,uBCxBkB;EDwChB,gBAAgB;EAChB,iDAA4D,ED3C/D;;AAND;ECYE,uBAA+B;EAgB7B,gBAAgB;EAChB,oDAAuE,ED3B1E;;AAFD;ECYE,uBAA+B;EAgB7B,gBAAgB;EAChB,sDAAuE,ED3B1E;;AAFD;ECYE,uBAA+B;EAgB7B,gBAAgB;EAChB,oDAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,mFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,qFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,gFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,oFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,gFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,8EAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,gFAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,2EAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,+EAAuE,ED3B1E;;AAFD;ECYE,sCAA+B;EAgB7B,gBAAgB;EAChB,2EAAuE,ED3B1E;;AAFD;ECYE,wBAA+B;EAgB7B,gBAAgB;EAChB,+DAAuE,ED3B1E;;AAFD;ECYE,2CAA+B;EAgB7B,gBAAgB;EAChB,oFAAuE,ED3B1E;;AAFD;ECYE,2CAA+B;EAgB7B,gBAAgB;EAChB,+EAAuE,ED3B1E;;AAFD;ECYE,2CAA+B;EAgB7B,gBAAgB;EAChB,mFAAuE,ED3B1E;;AAFD;ECYE,2CAA+B;EAgB7B,gBAAgB;EAChB,+EAAuE,ED3B1E;;AAUH;ECAI,qCAA+B;EAgB7B,gBAAgB;EAChB,+DAAuE,EDf5E;;AAFD;ECAI,qCAA+B;EAgB7B,gBAAgB;EAChB,iEAAuE,EDf5E","file":"mdc.theme.css","sourcesContent":["//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./mixins\";\n\n:root {\n  @each $style in map-keys($mdc-theme-property-values) {\n    --mdc-theme-#{$style}: #{map-get($mdc-theme-property-values, $style)};\n  }\n}\n\n@each $style in map-keys($mdc-theme-property-values) {\n  @if $style != \"background\" and $style != \"surface\" {\n    .mdc-theme--#{$style} {\n      @include mdc-theme-prop(color, $style, true);\n    }\n  } @else {\n    .mdc-theme--#{$style} {\n      @include mdc-theme-prop(background-color, $style);\n    }\n  }\n}\n\n// CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n@each $style in (\"primary\", \"secondary\") {\n  .mdc-theme--#{$style}-bg {\n    @include mdc-theme-prop(background-color, $style, true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/mdc-theme/mdc-theme.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n// Applies the correct theme color style to the specified property.\n// $property is typically color or background-color, but can be any CSS property that accepts color values.\n// $style should be one of the map keys in $mdc-theme-property-values (_variables.scss), or a color value.\n// $edgeOptOut controls whether to feature-detect around Edge to avoid emitting CSS variables for it,\n// intended for use in cases where interactions with pseudo-element styles cause problems due to Edge bugs.\n@mixin mdc-theme-prop($property, $style, $important: false, $edgeOptOut: false) {\n  @if mdc-theme-is-valid-theme-prop-value_($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    @if not map-has-key($mdc-theme-property-values, $style) {\n      @error \"Invalid style: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n    }\n\n    $value: map-get($mdc-theme-property-values, $style);\n\n    @if $important {\n      #{$property}: $value !important;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n      }\n    } @else {\n      #{$property}: $value;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value);\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/mdc-theme/_mixins.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./functions\";\n\n//\n// Main theme colors for your brand.\n//\n// If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n//\n\n$mdc-theme-primary: #6200ee !default; // baseline purple, 500 tone\n$mdc-theme-on-primary: if(mdc-theme-contrast-tone($mdc-theme-primary) == \"dark\", #000, #fff) !default;\n\n// The $mdc-theme-accent variable is DEPRECATED - it exists purely for backward compatibility.\n// The $mdc-theme-secondary* variables should be used for all new projects.\n$mdc-theme-accent: #018786 !default; // baseline teal, 600 tone\n$mdc-theme-secondary: $mdc-theme-accent !default;\n$mdc-theme-on-secondary: if(mdc-theme-contrast-tone($mdc-theme-secondary) == \"dark\", #000, #fff) !default;\n$mdc-theme-background: #fff !default; // White\n\n$mdc-theme-surface: #fff !default;\n$mdc-theme-on-surface: if(mdc-theme-contrast-tone($mdc-theme-surface) == \"dark\", #000, #fff) !default;\n\n//\n// Text colors according to light vs dark and text type.\n//\n\n$mdc-theme-text-colors: (\n  dark: (\n    primary: rgba(black, .87),\n    secondary: rgba(black, .54),\n    hint: rgba(black, .38),\n    disabled: rgba(black, .38),\n    icon: rgba(black, .38)\n  ),\n  light: (\n    primary: white,\n    secondary: rgba(white, .7),\n    hint: rgba(white, .5),\n    disabled: rgba(white, .5),\n    icon: rgba(white, .5)\n  )\n) !default;\n\n@function mdc-theme-ink-color-for-fill_($text-style, $fill-color) {\n  $contrast-tone: mdc-theme-contrast-tone($fill-color);\n\n  @return map-get(map-get($mdc-theme-text-colors, $contrast-tone), $text-style);\n}\n\n//\n// Primary text colors for each of the theme colors.\n//\n\n$mdc-theme-property-values: (\n  // Primary\n  primary: $mdc-theme-primary,\n  // Secondary\n  secondary: $mdc-theme-secondary,\n  // Background\n  background: $mdc-theme-background,\n  // Surface\n  surface: $mdc-theme-surface,\n  on-primary: $mdc-theme-on-primary,\n  on-secondary: $mdc-theme-on-secondary,\n  on-surface: $mdc-theme-on-surface,\n  // Text-primary on \"background\" background\n  text-primary-on-background: mdc-theme-ink-color-for-fill_(primary, $mdc-theme-background),\n  text-secondary-on-background: mdc-theme-ink-color-for-fill_(secondary, $mdc-theme-background),\n  text-hint-on-background: mdc-theme-ink-color-for-fill_(hint, $mdc-theme-background),\n  text-disabled-on-background: mdc-theme-ink-color-for-fill_(disabled, $mdc-theme-background),\n  text-icon-on-background: mdc-theme-ink-color-for-fill_(icon, $mdc-theme-background),\n  // Text-primary on \"light\" background\n  text-primary-on-light: mdc-theme-ink-color-for-fill_(primary, light),\n  text-secondary-on-light: mdc-theme-ink-color-for-fill_(secondary, light),\n  text-hint-on-light: mdc-theme-ink-color-for-fill_(hint, light),\n  text-disabled-on-light: mdc-theme-ink-color-for-fill_(disabled, light),\n  text-icon-on-light: mdc-theme-ink-color-for-fill_(icon, light),\n  // Text-primary on \"dark\" background\n  text-primary-on-dark: mdc-theme-ink-color-for-fill_(primary, dark),\n  text-secondary-on-dark: mdc-theme-ink-color-for-fill_(secondary, dark),\n  text-hint-on-dark: mdc-theme-ink-color-for-fill_(hint, dark),\n  text-disabled-on-dark: mdc-theme-ink-color-for-fill_(disabled, dark),\n  text-icon-on-dark: mdc-theme-ink-color-for-fill_(icon, dark)\n);\n\n// If `$style` is a color (a literal color value, `currentColor`, or a CSS custom property), it is returned verbatim.\n// Otherwise, `$style` is treated as a theme property name, and the corresponding value from\n// `$mdc-theme-property-values` is returned. If this also fails, an error is thrown.\n//\n// This is mainly useful in situations where `mdc-theme-prop` cannot be used directly (e.g., `box-shadow`).\n//\n// Examples:\n//\n// 1. mdc-theme-prop-value(primary) => \"#6200ee\"\n// 2. mdc-theme-prop-value(blue)    => \"blue\"\n//\n// NOTE: This function must be defined in _variables.scss instead of _functions.scss to avoid circular imports.\n@function mdc-theme-prop-value($style) {\n  @if mdc-theme-is-valid-theme-prop-value_($style) {\n    @return $style;\n  }\n\n  @if not map-has-key($mdc-theme-property-values, $style) {\n    @error \"Invalid theme property: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n  }\n\n  @return map-get($mdc-theme-property-values, $style);\n}\n\n// NOTE: This function must be defined in _variables.scss instead of _functions.scss to avoid circular imports.\n@function mdc-theme-accessible-ink-color($fill-color, $text-style: primary) {\n  $fill-color-value: mdc-theme-prop-value($fill-color);\n  $color-map-for-tone: map-get($mdc-theme-text-colors, mdc-theme-contrast-tone($fill-color-value));\n\n  @if not map-has-key($color-map-for-tone, $text-style) {\n    @error \"Invalid $text-style: '#{$text-style}'. Choose one of: #{map-keys($color-map-for-tone)}\";\n  }\n\n  @return map-get($color-map-for-tone, $text-style);\n}\n\n// NOTE: This function is depended upon by mdc-theme-prop-value (above) and thus must be defined in this file.\n@function mdc-theme-is-valid-theme-prop-value_($style) {\n  @return type-of($style) == \"color\" or $style == \"currentColor\" or str_slice($style, 1, 4) == \"var(\";\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/mdc-theme/_variables.scss"],"sourceRoot":""}