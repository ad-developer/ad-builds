{"version":3,"sources":["webpack:///./packages/mdc-grid-list/mdc-grid-list.scss","webpack:///./packages/material-components-web/node_modules/@material/theme/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/typography/_mixins.scss","webpack:///./packages/material-components-web/node_modules/@material/rtl/_mixins.scss"],"names":[],"mappings":";;;;;AA4BE,wBACE,6BAAmD,CACpD,eAKC,aACA,aAA0B,CAC3B,0BAGC,SACA,sBAAoC,CACrC,sBAGC,eAA4B,CAC7B,sBAUD,aACA,mBACA,SAAU,CAxBV,6CACE,cACA,cAA0B,CAC3B,wDAGC,UACA,sBAAoC,CACrC,oDAGC,gBAA4B,CAjB9B,yDACE,mCAAmD,CADrD,wDACE,+BAAmD,CADrD,wDACE,kCAAmD,CADrD,wDACE,mCAAmD,CADrD,wDACE,+BAAmD,CACpD,eA0DD,cACA,kBAGA,YACA,4CAAiE,CAClE,wBCpCK,sBAiBE,mDAjBF,uBAiBE,oEDyBN,kBACA,QAAS,CACV,gCAGC,kBACA,MACA,QACA,SACA,OACA,WACA,YACA,4BACA,2BACA,qBAAsB,CACvB,0BCzDK,yBAiBE,mDAjBF,WAiBE,wCD8CN,kBACA,SACA,sBACA,YACA,YAxGyC,CAyG1C,sBExFC,uBACA,mBACA,gBF2FA,cACA,SACA,UACA,eACA,gBACA,gBAAiB,CAClB,6BEzGG,6NAMF,uBACA,mBACA,gBFuGA,cACA,SACA,eACA,SAAU,CACX,qBAGC,kBACA,yBACA,WAAY,CACb,0DAKC,WAtI+C,CAuIhD,yDAGC,MACA,WAAY,CACb,gEGkFC,kBAGA,iBHnO+C,CAmJ9C,qLGoFC,iBAGA,kBHxFgI,CAFpI,2DGgFE,UAGA,cH3EE,cArJyC,CAsJ1C,2KG8EC,aAGA,UH3OuC,CA6J3C,8DGoEE,kBAGA,kBHrEyK,CACxK,iLGwEC,kBAGA,kBH3OuC,CA6J3C,yDGoEE,aAGA,WH/DE,cAjKyC,CAkK1C,uKGkEC,UAGA,aAhDoB,CA7IjB","file":"mdc.grid-list.min.css","sourcesContent":["//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n$mdc-grid-list-tile-width: 200px !default;\n$mdc-grid-list-tile-secondary-padding: 16px;\n$mdc-grid-list-tile-secondary-padding-narrow: 8px;\n$mdc-grid-list-oneline-cap-secondary-height: 48px;\n$mdc-grid-list-twoline-cap-secondary-height: 68px;\n$mdc-grid-list-tile-secondary-icon-size: 24px;\n\n@mixin mdc-grid-list-tile-aspect($width-height-ratio) {\n  .mdc-grid-tile__primary {\n    padding-bottom: calc(100% / #{$width-height-ratio});\n  }\n}\n\n@mixin mdc-grid-list-tile-gutter($gutter-width) {\n  .mdc-grid-tile {\n    margin: $gutter-width/2 0;\n    padding: 0 $gutter-width/2;\n  }\n\n  .mdc-grid-tile__secondary {\n    left: $gutter-width/2;\n    width: calc(100% - #{$gutter-width});\n  }\n\n  .mdc-grid-list__tiles {\n    margin: $gutter-width/2 auto;\n  }\n}\n\n// postcss-bem-linter: define grid-list\n@at-root {\n  @include mdc-grid-list-tile-aspect(1);\n  @include mdc-grid-list-tile-gutter(4px);\n}\n\n.mdc-grid-list__tiles {\n  display: flex;\n  flex-flow: row wrap;\n  padding: 0;\n}\n\n.mdc-grid-list--tile-gutter-1 {\n  @include mdc-grid-list-tile-gutter(1px);\n}\n\n.mdc-grid-list--tile-aspect-16x9 {\n  @include mdc-grid-list-tile-aspect(16 / 9);\n}\n\n.mdc-grid-list--tile-aspect-3x2 {\n  @include mdc-grid-list-tile-aspect(3 / 2);\n}\n\n.mdc-grid-list--tile-aspect-2x3 {\n  @include mdc-grid-list-tile-aspect(2 / 3);\n}\n\n.mdc-grid-list--tile-aspect-4x3 {\n  @include mdc-grid-list-tile-aspect(4 / 3);\n}\n\n.mdc-grid-list--tile-aspect-3x4 {\n  @include mdc-grid-list-tile-aspect(3 / 4);\n}\n// postcss-bem-linter: end\n\n// postcss-bem-linter: define grid-tile\n.mdc-grid-tile {\n  display: block;\n  position: relative;\n\n  /* @alternate */\n  width: $mdc-grid-list-tile-width;\n  width: var(--mdc-grid-list-tile-width, $mdc-grid-list-tile-width);\n}\n\n.mdc-grid-tile__primary {\n  @include mdc-theme-prop(background-color, background);\n  @include mdc-theme-prop(color, text-primary-on-background);\n\n  position: relative;\n  height: 0;\n}\n\n.mdc-grid-tile__primary-content {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n}\n\n.mdc-grid-tile__secondary {\n  @include mdc-theme-prop(background-color, primary);\n  @include mdc-theme-prop(color, on-primary);\n\n  position: absolute;\n  bottom: 0;\n  box-sizing: border-box;\n  height: $mdc-grid-list-oneline-cap-secondary-height;\n  padding: $mdc-grid-list-tile-secondary-padding;\n}\n\n.mdc-grid-tile__title {\n  @include mdc-typography-overflow-ellipsis;\n\n  display: block;\n  margin: 0;\n  padding: 0;\n  font-size: 1rem;\n  font-weight: #{map-get($mdc-typography-font-weight-values, medium)};\n  line-height: 1rem;\n}\n\n.mdc-grid-tile__support-text {\n  @include mdc-typography(subtitle1);\n  @include mdc-typography-overflow-ellipsis;\n\n  display: block;\n  margin: 0;\n  margin-top: 4px;\n  padding: 0;\n}\n\n.mdc-grid-tile__icon {\n  position: absolute;\n  top: calc(50% - #{$mdc-grid-list-tile-secondary-icon-size} / 2);\n  font-size: 0;\n}\n\n// stylelint-disable plugin/selector-bem-pattern\n// Linter disabled because we are nesting grid-tile under grid-list.\n.mdc-grid-list--twoline-caption .mdc-grid-tile__secondary {\n  height: $mdc-grid-list-twoline-cap-secondary-height;\n}\n\n.mdc-grid-list--header-caption .mdc-grid-tile__secondary {\n  top: 0;\n  bottom: auto;\n}\n\n.mdc-grid-list--with-icon-align-start {\n  .mdc-grid-tile__secondary {\n    @include mdc-rtl-reflexive-property(padding, $mdc-grid-list-tile-secondary-padding * 2 + $mdc-grid-list-tile-secondary-icon-size, $mdc-grid-list-tile-secondary-padding-narrow, \".mdc-grid-list\");\n  }\n\n  .mdc-grid-tile__icon {\n    @include mdc-rtl-reflexive-position(left, $mdc-grid-list-tile-secondary-padding, \".mdc-grid-list\");\n\n    font-size: $mdc-grid-list-tile-secondary-icon-size;\n  }\n}\n\n.mdc-grid-list--with-icon-align-end {\n  .mdc-grid-tile__secondary {\n    @include mdc-rtl-reflexive-property(padding, $mdc-grid-list-tile-secondary-padding, $mdc-grid-list-tile-secondary-padding * 2 + $mdc-grid-list-tile-secondary-icon-size, \".mdc-grid-list\");\n  }\n\n  .mdc-grid-tile__icon {\n    @include mdc-rtl-reflexive-position(right, $mdc-grid-list-tile-secondary-padding, \".mdc-grid-list\");\n\n    font-size: $mdc-grid-list-tile-secondary-icon-size;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n// postcss-bem-linter: end\n\n\n\n// WEBPACK FOOTER //\n// ./packages/mdc-grid-list/mdc-grid-list.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n// Applies the correct theme color style to the specified property.\n// $property is typically color or background-color, but can be any CSS property that accepts color values.\n// $style should be one of the map keys in $mdc-theme-property-values (_variables.scss), or a color value.\n// $edgeOptOut controls whether to feature-detect around Edge to avoid emitting CSS variables for it,\n// intended for use in cases where interactions with pseudo-element styles cause problems due to Edge bugs.\n@mixin mdc-theme-prop($property, $style, $important: false, $edgeOptOut: false) {\n  @if mdc-theme-is-valid-theme-prop-value_($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    @if not map-has-key($mdc-theme-property-values, $style) {\n      @error \"Invalid style: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n    }\n\n    $value: map-get($mdc-theme-property-values, $style);\n\n    @if $important {\n      #{$property}: $value !important;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value) !important;\n      }\n    } @else {\n      #{$property}: $value;\n\n      @if $edgeOptOut {\n        // stylelint-disable max-nesting-depth\n        @at-root {\n          @supports not (-ms-ime-align:auto) {\n            // stylelint-disable scss/selector-no-redundant-nesting-selector\n            & {\n              /* @alternate */\n              #{$property}: var(--mdc-theme-#{$style}, $value);\n            }\n            // stylelint-enable scss/selector-no-redundant-nesting-selector\n          }\n        }\n        // stylelint-enable max-nesting-depth\n      } @else {\n        /* @alternate */\n        #{$property}: var(--mdc-theme-#{$style}, $value);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/theme/_mixins.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-typography-base {\n  @each $key, $value in $mdc-typography-base {\n    #{$key}: $value;\n  }\n}\n\n@mixin mdc-typography($style) {\n  $style-props: map-get($mdc-typography-styles, $style);\n\n  @if not map-has-key($mdc-typography-styles, $style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{map-keys($mdc-typography-styles)}\";\n  }\n\n  @each $key, $value in $style-props {\n    #{$key}: $value;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin mdc-typography-overflow-ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n@mixin mdc-typography-baseline-top($distance) {\n  display: flex;\n  align-items: baseline;\n  margin-top: 0;\n  line-height: normal;\n\n  &::before {\n    @include mdc-typography-baseline-strut_($distance);\n  }\n}\n\n@mixin mdc-typography-baseline-bottom($distance) {\n  margin-bottom: -1 * $distance;\n\n  &::after {\n    @include mdc-typography-baseline-strut_($distance);\n\n    align-items: flex-start;\n  }\n}\n\n@mixin mdc-typography-baseline-strut_($distance) {\n  display: inline-flex;\n  width: 0;\n  height: $distance;\n  content: \"\";\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/typography/_mixins.scss","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n// Creates a rule that will be applied when an MDC Web component is within the context of an RTL layout.\n//\n// Usage Example:\n// ```scss\n// .mdc-foo {\n//   position: absolute;\n//   left: 0;\n//\n//   @include mdc-rtl {\n//     left: auto;\n//     right: 0;\n//   }\n//\n//   &__bar {\n//     margin-left: 4px;\n//     @include mdc-rtl(\".mdc-foo\") {\n//       margin-left: auto;\n//       margin-right: 4px;\n//     }\n//   }\n// }\n//\n// .mdc-foo--mod {\n//   padding-left: 4px;\n//\n//   @include mdc-rtl {\n//     padding-left: auto;\n//     padding-right: 4px;\n//   }\n// }\n// ```\n//\n// Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n// in most cases, it will in some cases lead to false negatives, e.g.\n//\n// ```html\n// <html dir=\"rtl\">\n//   <!-- ... -->\n//   <div dir=\"ltr\">\n//     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n//   </div>\n// </html>\n// ```\n//\n// In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n@mixin mdc-rtl($root-selector: null) {\n  @if ($root-selector) {\n    @at-root {\n      #{$root-selector}[dir=\"rtl\"] &,\n      [dir=\"rtl\"] #{$root-selector} & {\n        @content;\n      }\n    }\n  } @else {\n    [dir=\"rtl\"] &,\n    &[dir=\"rtl\"] {\n      @content;\n    }\n  }\n}\n\n// Takes a base box-model property - e.g. margin / border / padding - along with a default\n// direction and value, and emits rules which apply the value to the\n// \"<base-property>-<default-direction>\" property by default, but flips the direction\n// when within an RTL context.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//\n//   @include mdc-rtl {\n//     margin-right: 8px;\n//     margin-left: 0;\n//   }\n// }\n// ```\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-right: 8px;\n//\n//   @include mdc-rtl {\n//     margin-right: 0;\n//     margin-left: 8px;\n//   }\n// }\n// ```\n//\n// You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, \".mdc-component\")`.\n//\n// Note that this function will always zero out the original value in an RTL context. If you're\n// trying to flip the values, use mdc-rtl-reflexive-property().\n@mixin mdc-rtl-reflexive-box($base-property, $default-direction, $value, $root-selector: null) {\n  @if (index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector);\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include mdc-rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector: null) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include mdc-rtl-reflexive($prop-left, $left-value, $prop-right, $right-value, $root-selector);\n}\n\n// Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive-position(left, 0);\n//   position: absolute;\n// }\n// ```\n// is equivalent to:\n//\n// ```scss\n//  .mdc-foo {\n//    position: absolute;\n//    left: 0;\n//    right: initial;\n//\n//    @include mdc-rtl {\n//      right: 0;\n//      left: initial;\n//    }\n//  }\n// ```\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive-position($position-property, $value, $root-selector: null) {\n  @if (index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include mdc-rtl-reflexive(left, $left-value, right, $right-value, $root-selector);\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include mdc-rtl-reflexive(left, 2px, right, 5px);\n//   position: absolute;\n//  }\n//  ```\n//  is equivalent to:\n//\n//  ```scss\n//  .mdc-foo {\n//    position: absolute;\n//    left: 2px;\n//    right: 5px;\n//\n//    @include mdc-rtl {\n//      right: 2px;\n//      left: 5px;\n//    }\n//  }\n//  ```\n// An optional fifth $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin mdc-rtl-reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $root-selector: null\n) {\n  /* @noflip */\n  #{$left-property}: $left-value;\n\n  /* @noflip */\n  #{$right-property}: $right-value;\n\n  @include mdc-rtl($root-selector) {\n    /* @noflip */\n    #{$left-property}: $right-value;\n\n    /* @noflip */\n    #{$right-property}: $left-value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./packages/material-components-web/node_modules/@material/rtl/_mixins.scss"],"sourceRoot":""}